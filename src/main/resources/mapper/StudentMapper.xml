<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.teachingplatform.mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="com.example.teachingplatform.entity.Student">
        <id property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="num" column="num" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="major" column="major" jdbcType="VARCHAR"/>
        <result property="teacherId" column="teacher_id" jdbcType="INTEGER"/>
        <result property="grade" column="grade" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,num,sex,
        name,age,major,
        teacher_id,grade,phone
    </sql>
    <insert id="save">
        insert into student(user_id, num, sex, name, age, major, teacher_id, grade, phone)
        values (#{userId}, #{num}, #{sex}, #{name}, #{age}, #{major}, #{teacherId}, #{grade}, #{phone})
    </insert>
    <insert id="saveOrUpdate">
        insert into student(user_id, num, sex, name, age, major, teacher_id, grade, phone)
        values (#{userId}, #{num}, #{sex}, #{name}, #{age}, #{major}, #{teacherId}, #{grade}, #{phone})
        on duplicate key update
            num = #{num},
            sex = #{sex},
            name = #{name},
            age = #{age},
            major = #{major},
            teacher_id = #{teacherId},
            grade = #{grade},
            phone = #{phone}
    </insert>
    <update id="updateById">
        update student
        <set>
            <if test="num != null and num != ''">
                num = #{num},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="major != null and major != ''">
                major = #{major},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId},
            </if>
            <if test="grade != null and grade != ''">
                grade = #{grade},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
        </set>
        where user_id = #{userId}
    </update>
    <delete id="removeById">
        delete from student where user_id = #{userId}
    </delete>
    <select id="getPageList" resultType="com.example.teachingplatform.dto.StudentDTO">
        select user_id,
               num,
               sex,
               name,
               age,
               major,
               teacher_id,
               grade,
               phone,
               username
        from student
                 left join user u on u.id = student.user_id
        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="num != null and num != ''">
                and num = #{num}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="major != null and major != ''">
                and major = #{major}
            </if>
            <if test="teacherId != null">
                and teacher_id = #{teacherId}
            </if>
            <if test="grade != null and grade != ''">
                and grade = #{grade}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
        </where>
    </select>
    <select id="getById" resultMap="BaseResultMap">
        select
            user_id, num, sex, name, age, major, teacher_id, grade, phone
        from student
        where user_id = #{userId}
    </select>
</mapper>
